{"version":3,"sources":["utils/request/NetworkInformation.ts","utils/history/History.ts","index.tsx","utils/ServiceWorker.ts"],"names":["a","process","fetch","url","method","request","json","data","LocalStorageKey","require","config","document","getElementById","GetInfoAsync","then","location","locationShort","now","Date","time","getHours","getMinutes","today","getDate","getMonth","getFullYear","currentConnection","Location","LocationShort","Time","localStorageString","window","localStorage","getItem","localStorageObject","JSON","parse","push","setItem","stringify","AddToHistory","city","country_name","country_code2","catch","err","el","querySelector","innerHTML","style","whiteSpace","title","console","error","navigator","addEventListener","serviceWorker","register"],"mappings":"wLAEO,8BAAAA,EAAA,4DACOC,6CACGA,mCAFV,SAIeC,MAAMC,6EAAc,CACtCC,OAAQ,QALL,cAIDC,EAJC,gBAOaA,EAAQC,OAPrB,cAODC,EAPC,yBASEA,GATF,4C,+BCKMC,EAAkB,UCA/BC,EAAQ,GAAUC,SAEEC,SAASC,eAAe,QFPrC,WAAP,gCESAC,GACGC,MAAK,SAACP,IDHF,YAAuE,IAA/CQ,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,cACjCC,EAAM,IAAIC,KACVC,EAAI,UAAMF,EAAIG,WAAV,YAAwBH,EAAII,cAChCC,EAAK,UAAML,EAAIM,UAAV,YAAuBN,EAAIO,WAAa,EAAxC,YAA6CP,EAAIQ,eAExDC,EAA6B,CAC/BC,SAAUZ,EACVa,cAAeZ,EACfa,KAAMV,GAGJW,EAAqBC,OAAOC,aAAaC,QAAQzB,GAChDsB,IAAoBA,EAAqB,MAE9C,IAAII,EAAqBC,KAAKC,MAAMN,GAChCI,EAAmBZ,GACpBY,EAAmBZ,GAAqBe,KAAKX,GAC3CQ,EAAmBZ,GAAS,CAACI,GAElCK,OAAOC,aAAaM,QAClB9B,EACA2B,KAAKI,UAAUL,ICjBfM,CAAa,CACXzB,SAAS,GAAD,OAAKR,EAAKkC,KAAV,aAAmBlC,EAAKmC,cAChC1B,cAAeT,EAAKoC,mBAUvBC,OAAM,SAACC,GACN,IAAIC,EAAKnC,SAASoC,cAAc,aAChCD,EAAGE,UAAY,qDACfF,EAAGG,MAAMC,WAAa,SACtBvC,SAASwC,MAAQ,uBACjBC,QAAQC,MAAMR,MC7BZ,kBAAmBS,WACrBvB,OAAOwB,iBAAiB,QAAQ,WAC9BD,UAAUE,cAAcC,SAAS,2B","file":"static/js/main.196c7c93.chunk.js","sourcesContent":["import { ApiResponseType } from \"../models/ApiResponse\";\n\nexport async function GetInfoAsync() {\n  const url = process.env.REACT_APP_INFO_URL as string;\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  var request = await fetch(url + apiKey, {\n    method: \"GET\",\n  });  \n  var data = (await request.json()) as ApiResponseType;\n  \n  return data;\n}\n","import { History } from \"../models/History\";\n\ntype addToHistoryProps = {\n  location: string;\n  locationShort: string;\n};\n\nexport const LocalStorageKey = \"History\";\n\nexport function AddToHistory({ location, locationShort }: addToHistoryProps) {\n  const now = new Date();\n  const time = `${now.getHours()}:${now.getMinutes()}`;\n  const today = `${now.getDate()}/${now.getMonth() + 1}/${now.getFullYear()}`;\n\n  var currentConnection: History = {\n    Location: location,\n    LocationShort: locationShort,\n    Time: time,\n  };\n\n  var localStorageString = window.localStorage.getItem(LocalStorageKey);\n  if (!localStorageString) localStorageString = \"{}\";\n\n  var localStorageObject = JSON.parse(localStorageString);\n  if (localStorageObject[today])\n    (localStorageObject[today] as History[]).push(currentConnection);\n  else localStorageObject[today] = [currentConnection];\n\n  window.localStorage.setItem(\n    LocalStorageKey,\n    JSON.stringify(localStorageObject)\n  );\n}\n\nexport function GetHistory() {\n  return JSON.parse(window.localStorage.getItem(LocalStorageKey)!);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { GetInfoAsync } from \"./utils/request/NetworkInformation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AddToHistory } from \"./utils/history/History\";\nimport { RegisterServiceWorker } from \"./utils/ServiceWorker\";\nrequire(\"dotenv\").config();\n\nconst rootElement = document.getElementById(\"app\");\n\nGetInfoAsync()\n  .then((data) => {\n    AddToHistory({\n      location: `${data.city}, ${data.country_name}`,\n      locationShort: data.country_code2,\n    });\n\n    //ReactDOM.render(\n    //  <React.StrictMode>\n     //   <App data={data} />\n    //  </React.StrictMode>,\n    //  rootElement\n   // );\n  })\n  .catch((err) => {\n    var el = document.querySelector(\"#loader p\") as HTMLParagraphElement;\n    el.innerHTML = \"Something Went Wrong <br /> Please Try Again Later\";\n    el.style.whiteSpace = \"normal\";\n    document.title = \"Something Went Wrong\";\n    console.error(err);\n  });\n\nRegisterServiceWorker();\n","export function RegisterServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n      navigator.serviceWorker.register(\"/RequestInfo/sw.js\");\n    });\n  }\n}"],"sourceRoot":""}