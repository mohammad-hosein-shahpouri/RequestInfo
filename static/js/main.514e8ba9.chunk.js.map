{"version":3,"sources":["components/Layout.tsx","utils/models/Context.ts","App.tsx","utils/request/NetworkInformation.ts","index.tsx"],"names":["Layout","props","className","children","NetworkInfoContext","createContext","Info","SetInfo","value","App","data","useState","networkInfo","setNetworkInfo","Provider","library","add","fab","fas","far","a","process","fetch","url","method","request","json","require","config","rootElement","document","getElementById","GetInfoAsync","then","ReactDOM","render","StrictMode"],"mappings":"0NAGO,SAASA,EAAOC,GACrB,OACE,cAAC,WAAD,UACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAAsBD,EAAME,eCJpC,IAAMC,EAAqBC,wBAAc,CACvCC,KAAM,GACNC,QAAS,SAACC,OCUL,SAASC,EAAT,GAA+B,IAAhBC,EAAe,EAAfA,KACpB,EAAsCC,mBAA0BD,GAAhE,mBAAOE,EAAP,KAAoBC,EAApB,KAEA,OACE,cAACT,EAAmBU,SAApB,CACEN,MAAO,CAAEF,KAAMM,EAAaL,QAASM,GADvC,SAGE,cAACb,EAAD,UACE,wCAdRe,IAAQC,IAAIC,IAAKC,IAAKC,K,wECPf,8BAAAC,EAAA,4DACOC,6CACGA,mCAFV,SAIeC,MAAMC,6EAAc,CACtCC,OAAQ,QALL,cAIDC,EAJC,gBAOaA,EAAQC,OAPrB,cAODhB,EAPC,yBASEA,GATF,4C,wCCMPiB,EAAQ,IAAUC,SAElB,IAAMC,EAAcC,SAASC,eAAe,QDRrC,WAAP,gCCUAC,GAAeC,MAAK,SAACvB,GACnBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,CAAKC,KAAMA,MAEbmB,Q","file":"static/js/main.514e8ba9.chunk.js","sourcesContent":["import { FC, Fragment } from \"react\";\nimport { JsxElement } from \"typescript\";\n\nexport function Layout(props: any) {\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row\">{props.children}</div>\n      </div>\n    </Fragment>\n  );\n}\n","import { createContext } from \"react\";\nimport { ApiResponseType } from \"./ApiResponse\";\n\nconst NetworkInfoContext = createContext({\n  Info: {} as ApiResponseType,\n  SetInfo: (value: React.SetStateAction<ApiResponseType>) => {},\n});\n\nexport { NetworkInfoContext };\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Layout } from \"./components/Layout\";\nimport { ApiResponseType } from \"./utils/models/ApiResponse\";\nimport { NetworkInfoContext } from \"./utils/models/Context\";\n\nlibrary.add(fab, fas, far);\n\ntype props = {\n  data: ApiResponseType;\n};\n\nexport function App({ data }: props) {\n  const [networkInfo, setNetworkInfo] = useState<ApiResponseType>(data);\n\n  return (\n    <NetworkInfoContext.Provider\n      value={{ Info: networkInfo, SetInfo: setNetworkInfo }}\n    >\n      <Layout>\n        <p>sad</p>\n      </Layout>\n    </NetworkInfoContext.Provider>\n  );\n}\n","import { ApiResponseType } from \"../models/ApiResponse\";\n\nexport async function GetInfoAsync() {\n  const url = process.env.REACT_APP_INFO_URL as string;\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  var request = await fetch(url + apiKey, {\n    method: \"GET\",\n  });  \n  var data = (await request.json()) as ApiResponseType;\n  \n  return data;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { NetworkInfoContext } from \"./utils/models/Context\";\nimport { GetInfoAsync } from \"./utils/request/NetworkInformation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"antd/dist/antd.dark.min.css\"\nimport \"bootstrap-icons/font/bootstrap-icons.css\"\nrequire(\"dotenv\").config();\n\nconst rootElement = document.getElementById(\"app\");\n\nGetInfoAsync().then((data) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App data={data} />\n    </React.StrictMode>,\n    rootElement\n  );\n});\n"],"sourceRoot":""}