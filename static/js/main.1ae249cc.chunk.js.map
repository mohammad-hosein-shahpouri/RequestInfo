{"version":3,"sources":["utils/models/Context.ts","components/NetworkInfo.tsx","utils/request/NetworkInformation.ts","App.tsx","index.tsx"],"names":["NetworkInfoContext","createContext","Info","SetInfo","value","NetworkInfo","context","useContext","city","GetInfoAsync","a","process","fetch","url","method","request","json","data","App","useState","networkInfo","setNetworkInfo","useLayoutEffect","info","Provider","library","add","fab","fas","far","require","config","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"2OAGMA,EAAqBC,wBAAc,CACvCC,KAAM,GACNC,QAAS,SAACC,O,OCAL,SAASC,IACd,IAAMC,EAAUC,qBAAWP,GAE3B,OAAO,cAAC,WAAD,UAAWM,EAAQJ,KAAKM,OCN1B,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,4DACOC,6CACGA,mCAFV,SAIeC,MAAMC,6EAAc,CACtCC,OAAQ,QALL,cAIDC,EAJC,gBAOaA,EAAQC,OAPrB,cAODC,EAPC,yBAQEA,GARF,4C,sBCUA,SAASC,IACd,MAAsCC,mBACpC,IADF,mBAAOC,EAAP,KAAoBC,EAApB,KAWA,OAPAC,2BAAgB,WACd,sBAAC,4BAAAZ,EAAA,sEACkBD,IADlB,OACKc,EADL,OAECF,EAAeE,GAFhB,0CAAD,KAIC,IAGD,cAACvB,EAAmBwB,SAApB,CACEpB,MAAO,CAAEF,KAAMkB,EAAajB,QAASkB,GADvC,SAGE,cAAChB,EAAD,MAlBNoB,IAAQC,IAAIC,IAAKC,IAAKC,KCPtBC,EAAQ,IAAUC,SAElB,IAAMC,EAAcC,SAASC,eAAe,OAE5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFc,K","file":"static/js/main.1ae249cc.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { ApiResponseType } from \"./ApiResponse\";\n\nconst NetworkInfoContext = createContext({\n  Info: {} as ApiResponseType,\n  SetInfo: (value: React.SetStateAction<ApiResponseType>) => {},\n});\n\nexport { NetworkInfoContext };\n","import React, { Fragment, useContext, useLayoutEffect, useState } from \"react\";\nimport { ApiResponseType } from \"../utils/models/ApiResponse\";\nimport { NetworkInfoContext } from \"../utils/models/Context\";\nimport { GetInfoAsync } from \"../utils/request/NetworkInformation\";\n\nexport function NetworkInfo() {\n  const context = useContext(NetworkInfoContext);\n\n  return <Fragment>{context.Info.city}</Fragment>;\n}\n","import { ApiResponseType } from \"../models/ApiResponse\";\n\nexport async function GetInfoAsync() {\n  const url = process.env.REACT_APP_INFO_URL as string;\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  var request = await fetch(url + apiKey, {\n    method: \"GET\",\n  });\n  var data = (await request.json()) as ApiResponseType;\n  return data;\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { NetworkInfo } from \"./components/NetworkInfo\";\nimport { ApiResponseType } from \"./utils/models/ApiResponse\";\nimport { NetworkInfoContext } from \"./utils/models/Context\";\nimport { GetInfoAsync } from \"./utils/request/NetworkInformation\";\n\nlibrary.add(fab, fas, far);\n\nexport function App() {\n  const [networkInfo, setNetworkInfo] = useState<ApiResponseType>(\n    {} as ApiResponseType\n  );\n\n  useLayoutEffect(() => {\n    (async () => {\n      let info = await GetInfoAsync();      \n      setNetworkInfo(info);\n    })();\n  }, []);\n\n  return (\n    <NetworkInfoContext.Provider\n      value={{ Info: networkInfo, SetInfo: setNetworkInfo }}\n    >\n      <NetworkInfo />\n    </NetworkInfoContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nrequire(\"dotenv\").config();\n\nconst rootElement = document.getElementById(\"app\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}