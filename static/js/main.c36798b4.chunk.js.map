{"version":3,"sources":["components/Footer.tsx","components/Layout.tsx","utils/models/Context.ts","components/TimeInfo.tsx","components/ClientInfo.tsx","utils/history/History.ts","components/History.tsx","components/NetworkInfo.tsx","App.tsx","utils/request/NetworkInformation.ts","index.tsx"],"names":["Footer","now","Date","className","getUTCFullYear","icon","version","Layout","props","children","NetworkInfoContext","createContext","Info","SetInfo","value","TimeInfo","useContext","timezoneOffset","Math","floor","time_zone","offset","current_time","name","getDate","getMonth","getFullYear","getHours","getMinutes","ClientInfo","osName","osVersion","browserName","browserVersion","LocalStorageKey","History","history","JSON","parse","window","localStorage","getItem","items","key","x","connectionGroup","item","push","Location","Time","reverse","connections","NetworkInfo","mapRef","useRef","flagUrl","process","country_code2","useEffect","L","iconUrl","MarkerIcon","map","current","setView","lat","Number","latitude","lng","longitude","tileLayer","addTo","marker","bindPopup","openPopup","ip","country_name","src","id","alt","ref","continent_name","state_prov","city","district","isp","country_tld","calling_code","App","data","useState","networkInfo","setNetworkInfo","Provider","library","add","fab","fas","far","a","fetch","url","method","request","json","require","config","rootElement","document","getElementById","GetInfoAsync","then","location","locationShort","time","today","getDay","currentConnection","LocationShort","localStorageString","localStorageObject","setItem","stringify","AddToHistory","ReactDOM","render","StrictMode","catch","err","el","querySelector","innerHTML","style","whiteSpace","console","error"],"mappings":"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","file":"static/js/main.c36798b4.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Fragment, version } from \"react\";\n\nexport function Footer() {\n  const now = new Date();\n  return (\n    <Fragment>\n      <footer className=\" d-flex flex-column flex-md-row justify-content-between py-1 px-1 px-md-4\">\n        <span className=\"text-center d-block\">\n          Â© {now.getUTCFullYear()} - Mohammad Hosein Shahpouri\n        </span>\n\n        <p className=\"d-flex flex-row align-items-center justify-content-center text-center mb-0\">\n          <span className=\"\">Made with</span>\n          <FontAwesomeIcon icon=\"heart\" className=\"text-danger mx-1\" />        \n          <span className=\"\">and</span>          \n          <FontAwesomeIcon icon=\"coffee\" className=\"text-light mx-1\" /> \n        </p>\n      </footer>\n      <p className=\" text-center mb-0\">\n          <FontAwesomeIcon icon={[\"fab\",\"react\"]} className=\"mx-1 mt-1 text-info\" /> \n          <span className=\" text-info\">{version}</span>         \n      </p>\n    </Fragment>\n  );\n}\n","import { Fragment } from \"react\";\nimport { Footer } from \"./Footer\";\n\nexport function Layout(props: any) {\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"row justify-content-center align-items-center flex-column \">{props.children}</div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n","import { createContext } from \"react\";\nimport { ApiResponseType } from \"./ApiResponse\";\n\nconst NetworkInfoContext = createContext({\n  Info: {} as ApiResponseType,\n  SetInfo: (value: React.SetStateAction<ApiResponseType>) => {},\n});\n\nexport { NetworkInfoContext };\n","import { Fragment, useContext } from \"react\";\nimport { NetworkInfoContext } from \"../utils/models/Context\";\n\nexport function TimeInfo() {\n  const { Info } = useContext(NetworkInfoContext);\n  const timezoneOffset =\n    \"GTM\" +\n    (Math.floor(Info.time_zone.offset) > 0\n      ? \"+\" + Math.floor(Info.time_zone.offset)\n      : Math.floor(Info.time_zone.offset)) +\n    ((Info.time_zone.offset / 0.5) % 2 !== 0 ? \":30\" : \":00\");\n\n  var now = new Date(Info.time_zone.current_time);\n  return (\n    <Fragment>\n      <h3 className=\"text-center mt-2\">Time:</h3>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>Time Zone:</h4>\n        <h4>{Info.time_zone.name}</h4>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>Time Zone Offset:</h4>\n        <h4>{timezoneOffset}</h4>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>Now:</h4>\n        <h4>{`${now.getDate()}/${now.getMonth()}/${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}`}</h4>\n      </div>\n    </Fragment>\n  );\n}\n","import { Fragment } from \"react\";\nimport {\n  osName,\n  osVersion,\n  browserName,\n  browserVersion,\n} from \"react-device-detect\";\n\nexport function ClientInfo() {\n  return (\n    <Fragment>\n      <h3 className=\"text-center mt-2\">Client:</h3>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>OS:</h4>\n        <h4>{osName}</h4>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>OS Version:</h4>\n        <h4>{osVersion}</h4>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>Browser Name:</h4>\n        <h4>{browserName}</h4>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <h4>Browser Version:</h4>\n        <h4>{browserVersion}</h4>\n      </div>\n    </Fragment>\n  );\n}\n","import { History } from \"../models/History\";\n\ntype addToHistoryProps = {\n  location: string;\n  locationShort: string;\n};\n\nexport const LocalStorageKey = \"History\";\n\nexport function AddToHistory({ location, locationShort }: addToHistoryProps) {\n  const now = new Date();\n  const time = `${now.getHours()}:${now.getMinutes()}`;\n  const today = `${now.getDay()}/${now.getMonth()}/${now.getFullYear()}`;\n\n  var currentConnection: History = {\n    Location: location,\n    LocationShort: locationShort,\n    Time: time,\n  };\n\n  var localStorageString = window.localStorage.getItem(LocalStorageKey);\n  if (!localStorageString) localStorageString = \"{}\";\n\n  var localStorageObject = JSON.parse(localStorageString);\n  if (localStorageObject[today])\n    (localStorageObject[today] as History[]).push(currentConnection);\n  else localStorageObject[today] = [currentConnection];\n\n  window.localStorage.setItem(\n    LocalStorageKey,\n    JSON.stringify(localStorageObject)\n  );\n}\n\nexport function GetHistory() {\n  return JSON.parse(window.localStorage.getItem(LocalStorageKey)!);\n}\n","import { Fragment } from \"react\";\nimport { GetHistory } from \"../utils/history/History\";\nimport { History as HistoryModel } from \"../utils/models/History\";\n\nexport function History() {\n  var history = GetHistory();\n\n  const connections = () => {\n    var items = [];\n    for (const key in history) {\n      var x = history[key] as HistoryModel[];\n      var connectionGroup = [];\n      for (const item of x) {\n        connectionGroup.push(\n          <div className=\"d-flex flex-row justify-content-between\">\n            <h4>{item.Location}</h4>\n            <h4>{item.Time}</h4>\n          </div>\n        );\n      }\n      items.push(\n        <details>\n          <summary className=\"h3\">{key}</summary>\n          {connectionGroup.reverse()}\n        </details>\n      );\n    }\n\n    return items;\n  };\n\n  return (\n    <Fragment>\n      <h3 className=\"text-center mt-2\">History:</h3>\n      {connections()}\n    </Fragment>\n  );\n}\n","import L from \"leaflet\";\nimport React, { Fragment, useContext, useEffect, useRef } from \"react\";\nimport { NetworkInfoContext } from \"../utils/models/Context\";\nimport \"leaflet/dist/leaflet.css\";\nimport { TimeInfo } from \"./TimeInfo\";\nimport { ClientInfo } from \"./ClientInfo\";\nimport MarkerIcon from \"leaflet/dist/images/marker-icon.png\";\nimport { History } from \"./History\";\n\nexport function NetworkInfo() {\n  const mapRef = useRef<HTMLDivElement>(null);\n\n  const { Info } = useContext(NetworkInfoContext);\n  const flagUrl =\n    process.env.REACT_APP_FLAG_IMAGE_URL +\n    Info.country_code2 +\n    process.env.REACT_APP_FLAG_IMAGE_TYPE;\n\n  useEffect(() => {\n    var icon = L.icon({\n      iconUrl: MarkerIcon,      \n    });\n\n    var map = L.map(mapRef.current!).setView(\n      {\n        lat: Number(Info.latitude),\n        lng: Number(Info.longitude),\n      },\n      13\n    );\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(\n      map\n    );\n\n    L.marker(\n      {\n        lat: Number(Info.latitude),\n        lng: Number(Info.longitude),\n      },\n      { icon }\n    )\n      .addTo(map)\n      .bindPopup(\"Your Location\")\n      .openPopup();\n  });\n\n  return (\n    <Fragment>\n      <div className=\"col-11 col-lg-5\">\n        <h1 className=\"text-center mb-0 mt-2\">You're connected to:</h1>\n        <h1 className=\"text-center\">{Info.ip}</h1>\n      </div>\n      <div className=\"col-11 col-lg-5 d-flex flex-column\">\n        <h2 className=\"text-center\">From {Info.country_name}</h2>\n        <img src={flagUrl} id=\"flag\" alt={Info.country_name} className=\"rounded-3\" />\n      </div>\n      <div className=\"col-11 col-lg-5\">\n        <h3 className=\"text-center mt-2\">On Map:</h3>\n        <div\n          className=\"rounded-3\"\n          ref={mapRef}\n          id=\"map\"\n        ></div>\n      </div>\n\n      <div className=\"col-12  col-lg-5\">\n        <h3 className=\"text-center mt-2\">Extra Information:</h3>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>Continent:</h4>\n          <h4>{Info.continent_name}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>State:</h4>\n          <h4>{Info.state_prov}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>City:</h4>\n          <h4>{Info.city}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>District:</h4>\n          <h4>{Info.district}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>ISP:</h4>\n          <h4>{Info.isp}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>Internet TLD:</h4>\n          <h4>{Info.country_tld}</h4>\n        </div>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <h4>Calling Code:</h4>\n          <h4>{Info.calling_code}</h4>\n        </div>\n        <hr />\n        <TimeInfo />\n        <hr />\n        <ClientInfo />\n        <hr/>\n        <History />\n      </div>\n    </Fragment>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Layout } from \"./components/Layout\";\nimport { NetworkInfo } from \"./components/NetworkInfo\";\nimport { AddToHistory } from \"./utils/history/History\";\nimport { ApiResponseType } from \"./utils/models/ApiResponse\";\nimport { NetworkInfoContext } from \"./utils/models/Context\";\n\nlibrary.add(fab, fas, far);\n\ntype props = {\n  data: ApiResponseType;\n};\n\nexport function App({ data }: props) {\n  const [networkInfo, setNetworkInfo] = useState<ApiResponseType>(data);\n\n  return (\n    <NetworkInfoContext.Provider\n      value={{ Info: networkInfo, SetInfo: setNetworkInfo }}\n    >\n      <Layout>\n        <NetworkInfo></NetworkInfo>\n      </Layout>\n    </NetworkInfoContext.Provider>\n  );\n}\n","import { ApiResponseType } from \"../models/ApiResponse\";\n\nexport async function GetInfoAsync() {\n  const url = process.env.REACT_APP_INFO_URL as string;\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  var request = await fetch(url + apiKey, {\n    method: \"GET\",\n  });  \n  var data = (await request.json()) as ApiResponseType;\n  \n  return data;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { GetInfoAsync } from \"./utils/request/NetworkInformation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AddToHistory } from \"./utils/history/History\";\nrequire(\"dotenv\").config();\n\nconst rootElement = document.getElementById(\"app\");\n\nGetInfoAsync()\n  .then((data) => {\n    AddToHistory({\n      location: `${data.city}, ${data.country_name}`,\n      locationShort: data.country_code2,\n    });\n\n    ReactDOM.render(\n      <React.StrictMode>\n        <App data={data} />\n      </React.StrictMode>,\n      rootElement\n    );\n  })\n  .catch((err) => {\n    var el = document.querySelector(\"#loader p\") as HTMLParagraphElement;\n    el.innerHTML = \"Something Went Wrong <br /> Please Try Again Later\";\n    el.style.whiteSpace = \"normal\";\n    console.error(err);\n  });\n"],"sourceRoot":""}